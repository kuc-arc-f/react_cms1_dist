{"version":3,"sources":["component/Layouts/Head.js","component/About.js","libs/LibCommon.js","component/Layouts/TopPostsRow.js","component/Home.js","libs/LibCmsEdit_3.js","component/Show.js","component/TableRow.js","component/Test.js","App.js","serviceWorker.js","index.js"],"names":["Head","id","className","href","to","React","Component","About","formatDate","date","format","replace","getFullYear","getMonth","slice","getDate","getHours","getMinutes","getSeconds","match","milliSeconds","getMilliseconds","length","i","substring","get_item","items","ret","forEach","item","get_string_rigth","str","num","len","start","convert_items","data","self","this","Date","created_at","push","get_reverse_items","unshift","TopPostsRow","props","obj","show_id","title","Home","state","dt","LibCommon","axios","get","then","response","resData","setState","console","log","catch","error","Array","map","object","key","valign","src","tabRow","String","Show","params","res","LibCmsEdit_3","content","marked","dangerouslySetInnerHTML","__html","TableRow","Test","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7df68aaf.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\n//\nclass Head extends React.Component {\n  render(){\n    return(\n        <div id=\"div_navigate_index\">\n            <div id=\"div_head\" className=\"cover\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-4\">\n                            <a href=\"/\"><p>ReactCMS 1</p></a>\n                        </div>\n                        <div className=\"col-sm-8\">\n                            <div className='menubar'>\n                                <ul className='menu text-border'>\n                                    <li><a href='#post_items_box'>posts</a></li>\n                                    <li><Link to=\"/about\">About</Link>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>          \n            </div>\n            <div id=\"nav-mobile\">\n                <a className=\"toggle\">\n                    <span>\n                        <i className=\"fas fa-bars\"></i>\n                    </span>\n                </a>\n                <div className=\"mobile-child\">\n                <ul className='ul_mobile-child'>\n                    <li className=\"mobile-menu-item\"><a href='#post_items_box'>posts</a>\n                    </li>\n                </ul>\n                </div>                \n\n            </div>            \n\n\n        </div>\n    )\n  }\n}\n//\nexport default Head;\n\n","import React from 'react'\n\n//\nclass About extends React.Component {\n  render(){\n    return(\n      <div className=\"container\">\n        <h1>About</h1>\n        <h2>about, 123</h2>\n      </div>\n    )\n  }\n}\n\n\nexport default About;\n\n","// LibCommon\r\n\r\n//\r\nexport default {\r\n    /* convert date format */\r\n    formatDate : function (date, format) {\r\n        if (!format) format = 'YYYY-MM-DD hh:mm:ss.SSS';\r\n        format = format.replace(/YYYY/g, date.getFullYear());\r\n        format = format.replace(/MM/g, ('0' + (date.getMonth() + 1)).slice(-2));\r\n        format = format.replace(/DD/g, ('0' + date.getDate()).slice(-2));\r\n        format = format.replace(/hh/g, ('0' + date.getHours()).slice(-2));\r\n        format = format.replace(/mm/g, ('0' + date.getMinutes()).slice(-2));\r\n        format = format.replace(/ss/g, ('0' + date.getSeconds()).slice(-2));\r\n        if (format.match(/S/g)) {\r\n            var milliSeconds = ('00' + date.getMilliseconds()).slice(-3);\r\n            var length = format.match(/S/g).length;\r\n            for (var i = 0; i < length; i++) format = format.replace(/S/, milliSeconds.substring(i, i + 1));\r\n        }\r\n        return format;\r\n    },\r\n    get_item: function(items, id){\r\n        var ret = null;\r\n        items.forEach(function(item){\r\n//            console.log(item.id );\r\n            if(item.id === id){\r\n                ret = item\r\n            }\r\n        });\r\n        return ret\r\n    },    \r\n    /*********************************\r\n     * get right string\r\n     * num: length\r\n    ***********************************/ \r\n    get_string_rigth: function(str, num){\r\n        str = \"0000000000\" + str\r\n        var len = str.length\r\n        var start = len - num\r\n        var ret = str.substring(start ,len)\r\n        return ret\r\n    },\r\n    convert_items: function(items){\r\n\t\tvar data =[]\r\n\t\tvar self = this\r\n        items.forEach(function(item){\r\n            var date = new Date(item.created_at)\r\n            date = self.formatDate(date, 'YYYY-MM-DD hh:mm')\r\n            item.created_at = date\r\n//console.log(date)\r\n            data.push(item)                        \r\n        });        \r\n        return data\r\n    },    \r\n\r\n    get_reverse_items: function(items){\r\n\t\tvar data =[]\r\n\t\tvar self = this\r\n        items.forEach(function(item){\r\n            var date = new Date(item.created_at)\r\n            date = self.formatDate(date, 'YYYY-MM-DD hh:mm')\r\n            item.created_at = date\r\n//console.log(date)\r\n            data.unshift(item)                        \r\n        });        \r\n        return data\r\n    },    \r\n\r\n\r\n}\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n//\nclass TopPostsRow extends Component {\n   render() {\n      return (\n      <div className=\"post_items_wrap\">\n         <div className=\"div_news_rows\">\n            <Link to={`/show/${this.props.obj.show_id}`} >\n               <h3 className=\"ml-10\"> {this.props.obj.title}\n               </h3>             \n            </Link>        \n         </div>\n         <div>\n            <ul className=\"ul_time_box\">\n               <li>\n                  <p className=\"mb-0\">\n                     <span>\n                        <i className=\"far fa-calendar\"></i>\n                     </span>\n                     {this.props.obj.created_at} , ID : {this.props.obj.id}\n                  </p>               \n               </li>\n               \n            </ul>\n\n         </div>\n      </div>\n      )\n   }\n}\n\nexport default TopPostsRow;\n\n","import React from 'react'\nimport axios from 'axios';\nimport LibCommon from '../libs/LibCommon';\nimport TopPostsRow from './Layouts/TopPostsRow';\n//\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {data: ''}\n  }  \n  componentDidMount(){\n    var dt = LibCommon.formatDate( new Date(), \"YYYY-MM-DD_hhmmss\");\n    axios.get('/cms.json?' + dt).then(response => {\n        var resData = response.data\n        resData.items = LibCommon.get_reverse_items( resData.items )\n//        this.setState({ data: response.data })\n        this.setState({ data: resData })\n        console.log( this.state.data.items )\n    })\n    .catch(function (error) {\n      console.log(error)\n    })\n  }\n  tabRow(){\n    if(this.state.data.items instanceof Array){\n      return this.state.data.items.map(function(object, i){\n        return <TopPostsRow obj={object} key={i} />\n      })\n    }\n  }    \n  render(){\n    return(\n        <div className=\"body_main_wrap\">\n            <div id=\"div_img_main2\"  className=\"cover\" valign=\"bottom\">\n                <div id=\"div_img_layer\">\n                    <h1>〇〇 Blog<br />\n                    </h1>\n                </div>\n            </div> \n            <div className=\"container\">\n                <div className=\"row conte\" id=\"id_row_service\">\n                    <div className=\"col-sm-12\">\n                        <h2 className=\"h4_td_title mt-2\">トピック</h2>\n                        <hr className=\"hr_ex1\"/>\n                    </div>\n                </div>                \n                <div className=\"row conte\">\n                    <div className=\"col-sm-4\">\n                        <img className=\"img_kao\" src=\"/img/pc1.png\" />\n                    </div>\n                    <div className=\"col-sm-8\">\n                        <h3>このサイトの紹介 1</h3>\n                        <p> </p>\n                    </div>\n                </div>\n                <div className=\"body_wrap\">\n                    <div id=\"post_items_box\" className=\"row conte\">\n                        <div className=\"col-sm-12\">\n                            <div id=\"div_news\">\n                                <h2 className=\"h4_td_title mt-2\" >新着の投稿</h2>\n                            </div>  \n                            {this.tabRow()}                      \n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n  }\n}\n\n\nexport default Home;\n\n","// LibCmsEdit_3\r\n\r\n//import LibCommon from '@/libs/LibCommon';\r\n\r\n//\r\nexport default {\r\n    get_const: function(){\r\n        return {\r\n            DB_NAME: \"cms_edit3_idx_kuc_db\",\r\n            DB_VERSION: 1,\r\n            /*\r\n            DB_STORE_ver2: {\r\n                cms_edit: '++id, category_id, show_id , title, content , created_at',\r\n                category: '++id, name, created_at',\r\n            },\r\n            */\r\n            DB_STORE: {\r\n                cms_edit: '++id, category, show_id , title, content , created_at',\r\n                category: '++id, name, save_id, created_at',\r\n                pages: '++id, save_id , title, content , created_at',\r\n            },\r\n//            file_version: 2,\r\n            file_version: 3,\r\n        }\r\n    },\r\n    get_show_item: function(items, id){\r\n        var ret = null;\r\n        items.forEach(function(item){\r\n//console.log(item.show_id );\r\n            if(item.show_id === String(id) ){\r\n                ret = item\r\n            }\r\n        });\r\n        return ret\r\n    }, \r\n    get_page_item: function(items, id){\r\n        var ret = null;\r\n        items.forEach(function(item){\r\n//console.log(item.show_id );\r\n            if(item.save_id === String(id) ){\r\n                ret = item\r\n            }\r\n        });\r\n        return ret\r\n    },        \r\n    get_category_item: function(items, id){\r\n        var ret = {\r\n            id: 0,\r\n            name: \"\",\r\n            save_id: \"id0\",\r\n        };\r\n        items.forEach(function(item){\r\n//console.log(item.show_id );\r\n            if(item.save_id === String(id) ){\r\n                ret = item\r\n            }\r\n        });\r\n        return ret\r\n    },    \r\n    get_category_data: function(items, id){\r\n        var ret = [];\r\n        items.forEach(function(item){\r\n//console.log(item.category.save_id );\r\n            if(item.category.save_id === String(id) ){\r\n                ret.push(item)\r\n            }\r\n        });\r\n        return ret\r\n    },\r\n\r\n}\r\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport LibCommon from '../libs/LibCommon';\nimport LibCmsEdit_3 from '../libs/LibCmsEdit_3';\nimport axios from 'axios'\nimport marked from  'marked'\n//import $ from  'jquery'\n\nimport '../css/show.css';\n\n//\nclass Show extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {data: ''}\n        this.id = \"\"\n    }\n    componentDidMount(){\n        this.id  = this.props.match.params.id \n//        console.log( this.id   )\n        this.get_item( this.id )\n    }\n    get_item(id){\n        var dt = LibCommon.formatDate( new Date(), \"YYYY-MM-DD_hhmmss\");\n        axios.get('/cms.json?' + dt).then(res =>  {\n            var data = res.data\n            var items = LibCommon.convert_items(data.items )\n            var item  = LibCmsEdit_3.get_show_item( items, String(id) )\n            item.content = marked(item.content)\n            this.setState({ data: item })\n// console.log( item.content )\n        })\n    }\n    get_content(){\n        console.log( \"#-get_content\" )\n//        $(\"#post_item\").append(this.state.data.content)\n        return false\n        //return this.state.data.content\n    }    \n    render(){\n        return(\n            <div className=\"container\">\n                <Link to=\"/\" className=\"btn btn-outline-primary mt-2\">Back</Link>\n                <hr className=\"mt-2 mb-2\" />\n                <h1>{this.state.data.title}</h1>\n                date : {this.state.data.created_at} <br />\n                <hr />\n                <div id=\"post_item\"\n                dangerouslySetInnerHTML={{ __html: this.state.data.content }} />\n            </div>\n        )\n    }\n}\n\n\nexport default Show;\n\n","import React, { Component } from 'react';\n//import { Link } from 'react-router-dom';\n\n//\nclass TableRow extends Component {\n  render() {\n    return (\n      <p>\n        {this.props.obj.id} , \n        {this.props.obj.title}\n      </p>\n    )\n  }\n}\n\nexport default TableRow;\n\n","import React from 'react'\nimport axios from 'axios';\nimport TableRow from './TableRow';\nimport LibCommon from '../libs/LibCommon';\n//\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {data: ''}\n  }  \n  componentDidMount(){\n    var dt = LibCommon.formatDate( new Date(), \"YYYY-MM-DD_hhmmss\");\n    axios.get('/cms.json?' + dt)\n    .then(response => {\n      this.setState({ data: response.data })\n      console.log( this.state.data.items )\n    })\n    .catch(function (error) {\n      console.log(error)\n    })\n  }\n  tabRow(){\n    if(this.state.data.items instanceof Array){\n      return this.state.data.items.map(function(object, i){\n        return <TableRow obj={object} key={i} />\n      })\n    }\n  }    \n  render(){\n    return(\n      <div>\n        <h1>test</h1>\n        <h2>welcome, test2</h2>\n        <hr />\n        <div>\n          {this.tabRow()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Test;\n\n","import React, { Component } from 'react';\n//import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport Head from './component/Layouts/Head';\nimport About from './component/About';\nimport Home from './component/Home';\nimport Show from './component/Show';\nimport Test from './component/Test';\n\n//\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Head />\n            <Route exact path='/' component={Home}/>\n            <Route path=\"/show/:id\" component={Show} />\n            <Route path='/about' component={About}/>\n\n            <Route path='/test' component={Test}/>\n\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}